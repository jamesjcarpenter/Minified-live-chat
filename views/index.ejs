<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
<script src="/socket.io/socket.io.js"></script>
      <link rel="stylesheet" type="text/css" href="semantic/dist/semantic.css">
      <link rel="stylesheet" href="https://toert.github.io/Isolated-Bootstrap/versions/3.3.7/iso_bootstrap3.3.7min.css">
        <script src = "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/webrtc-adapter/6.4.0/adapter.min.js" ></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.7.2/jquery.min.js" ></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js" ></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.2/js/bootstrap.min.js"></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.1.0/bootbox.min.js"></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js"></script>
      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.3/toastr.min.js"></script>
  <title><h1> <strong>{{ room }}</strong></h1></title>
  <style>
@media (min-width:1025px) { /* big landscape tablets, laptops, and desktops */ }
    body { visibility:hidden !important; width:100%;
    }
    html { padding-top:1px; overflow-y: hidden; overflow-x: hidden;}
    #chat-content { padding-top:30px!important; height: 530px; width: 385px; overflow-y: scroll; overflow-x: hidden; line-height:1.06; position:relative;}
    .segment { background-color: 111111 }
    #local-video { display:block!important; width:100%; max-height:100%;position:relative;}
    #remote-videos { display:block!important; width:100%; height:100%; position:relative;right:2.5vw;}
    #chat { display:block!important;margin-right:60px;position:relative;}
    #youtube-buttons { max-width: 100%;padding-top:12.4vh;}
    .youtubewrapper { margin-right:24em;}
    #slidersound { padding-top:20px; }
    #conversation{display:block!important;
    }
    #chatbox {  
      display:block!important;
    text-align:left;  
    margin:0 auto;  
    margin-bottom:0px;  
    padding:10px;
    background:#fff;  
    height:auto;  
    border:1px solid #ACD8F0;  
    overflow:auto; }  
    #data {
      padding:10px;
      padding-top:10px;
      padding-bottom:5px;
      padding-right:30px;
      margin-bottom:0px;
      margin-left:auto;
      margin-right:auto;
      display:inline-grid;
    }
    #chatbox{
      padding:10px;
      padding-top:10px;
      padding-right:30px;
      padding-bottom:5px;
      width:100%;
      margin-left:auto;
      margin-right:auto;
      margin-bottom:0px;
      min-width:200px;
      display:inline-grid;
    }
    #datasend {
      display: none!important;
    }
  #copywrapper {
    top:2.2em;
    right:8.25em;
    
  }
  #inputwrapper{
    width:21.5vw;
    border: 22px outset rgba(41,161,164,0.62);
    border-radius: 21px 21px 9px 9px;
  }
  #message{
    padding-top:10px;
    padding-left:20px;
    padding-right:20px;
    padding-bottom:10px;
    margin:0 auto;
    margin-left:45px;
    bottom:5px;
    
  }
  
  #username{
    padding-left:15px;
    padding-right:20px;
    margin:0 auto;
    margin-bottom:0;
  }
  #useravatar{
    top:17px;
    bottom:0;
    margin:0 auto;
    height:3.5vh;
    width:1.75vw;

  }
    .aspectwrapper {
  display: inline-block; /* shrink to fit */
  width: 100%;           /* whatever width you like */
  position: relative;    /* so .content can use position: absolute */
}
.aspectwrapper::after {
  padding-top: 56.25%; /* percentage of containing block _width_ */
  display: block;
  content: '';
}
.blockUI {
  height:0px!important;
  width:0px!important;
}
.unblockUI {
  height:0px!important;
  width:0px!important;
}
.blockUI.blockOverlay {
  height:0px!important;
  width:0px!important;
}
.blockUI.blockMsg.blockElement {
  height:0px!important;
  width:0px!important;
}
.content {
  position: absolute;
  top: 0; bottom: 0; right: 0; left: 0;  /* follow the parent's edges */
  outline: thin dashed green;            /* just so you can see the box */
}
    .ui-resizable { position: relative;}
.ui-resizable-handle { position: absolute;font-size: 0.1px; display: block; }
.ui-resizable-disabled .ui-resizable-handle, .ui-resizable-autohide .ui-resizable-handle { display: none; }
.ui-resizable-n { cursor: n-resize; height: 7px; width: 100%; top: -5px; left: 0; }
.ui-resizable-s { cursor: s-resize; height: 7px; width: 100%; bottom: -5px; left: 0; }
.ui-resizable-e { cursor: e-resize; width: 7px; right: -5px; top: 0; height: 100%; }
.ui-resizable-w { cursor: w-resize; width: 7px; left: -5px; top: 0; height: 100%; }
.ui-resizable-se { cursor: se-resize; width: 12px; height: 12px; right: 1px; bottom: 1px; }
.ui-resizable-sw { cursor: sw-resize; width: 9px; height: 9px; left: -5px; bottom: -5px; }
.ui-resizable-nw { cursor: nw-resize; width: 9px; height: 9px; left: -5px; top: -5px; }
.ui-resizable-ne { cursor: ne-resize; width: 9px; height: 9px; right: -5px; top: -5px;}
.win-size-grip {
   position: absolute;
   width: 16px;
   height: 16px;
   padding: 4px;
   bottom: 0;
   right: 0;
   cursor: nwse-resize;
   background: url(https://raw.githubusercontent.com/RickStrahl/jquery-resizable/master/assets/wingrip.png) no-repeat;
 }
 .rounded {
	border-radius: 5px;
}

.centered {
	display: block;
	margin: auto;
}

.relative {
	position: relative;
}

.navbar-brand {
	margin-left: 0px !important;
}

.navbar-default {
	-webkit-box-shadow: 0px 3px 5px rgba(100, 100, 100, 0.49);
	-moz-box-shadow:    0px 3px 5px rgba(100, 100, 100, 0.49);
	box-shadow:         0px 3px 5px rgba(100, 100, 100, 0.49);
}

.navbar-header {
	padding-left: 40px;
}

.margin-sm {
	margin: 5px !important;
}
.margin-md {
	margin: 10px !important;
}
.margin-xl {
	margin: 20px !important;
}
.margin-bottom-sm {
	margin-bottom: 5px !important;
}
.margin-bottom-md {
	margin-bottom: 10px !important;
}
.margin-bottom-xl {
	margin-bottom: 20px !important;
}

.divider {
	width: 100%;
	text-align: center;
}

.divider hr {
	margin-left: auto;
	margin-right: auto;
	width: 45%;
}

div.no-video-container {
	position: relative;
}

.no-video-icon {
	width: 100%;
	height: 240px;
	text-align: center;
}

.no-video-text {
	text-align: center;
	position: absolute;
	bottom: 0px;
	right: 0px;
	left: 0px;
	font-size: 24px;
}



pre {
	white-space: pre-wrap;
	white-space: -moz-pre-wrap;
	white-space: -pre-wrap;
	white-space: -o-pre-wrap;
	word-wrap: break-word;
}

.januscon {
	font-weight: bold;
	animation: pulsating 1s infinite;
}
@keyframes pulsating {
	30% {
		color: #FFD700;
	}
}
 
 
  </style>
  <h3 class="ui tiny center aligned icon header">
  <i class="ui tiny circular user secret icon"></i>
</h3>
</head>
<body>
  

  <div class="ui rail internal right"id="copywrapper">
  <div class="ui action input" id="inputwrapper">
  <input type="text" value='<%- JSON.stringify(url)%>'>
  <button class="ui teal right labeled icon button">
    <i class="copy icon"></i>
    Copy
  </button>
</div>
</div>
  <div class="ui mini basic test modal">
    <div class="ui large icon header">
      <i class="user secret icon"></i>
      enter a username.
    </div>
    <div class="content">
      <div class="field">
        
        <div class="ui big form">
  <div class="field">
    <div class="field">      <div class="five column doubling ui grid">
      <input placeholder="Username" type="text" name="username">
    </div>
  </div>
</div>
    </div>
    </div>
    <div class="actions">
      <div class="ui basic segment"></div>
      <div class="ui large centered red basic cancel inverted button">
        <i class="centered remove icon"></i>
        NVM
      </div>
      <div class="ui large centered green ok inverted button" action="submit">
        <i class="centered checkmark icon"></i>
        OK
      </div>
    </div>
  </div>
</div>

<div class="ui fixed attached vertical labeled icon gray menu">
  <a href="/home">
      <div class="ui basic segment">
      <span class="ui button"><h5><i class="ui home icon"></i></h5></span>
      </div>
  </a>
  <div class="ui basic segment">
  </div>
  <div class="ui basic segment">
  </div>
  <div class="ui basic segment">
  </div>
  <div class="ui basic segment">
  </div>
  <a class="item">
    <i class="users icon"></i>
  </a>
  <a class="item">
    <i class="paint brush icon"></i>
  </a>
  <a class="item">
    <i class="video camera icon"></i>
    <div class="inline field">
        <div class="ui toggle checkbox">
          <input type="checkbox" tabindex="0" class="hidden">
        </div>
      </div>
  </a>
  <a class="item">
    <i class="video play icon"></i>
    <div class="inline field">
        <div class="ui toggle checkbox">
          <input type="checkbox" tabindex="0" class="hidden">
        </div>
      </div>
  </a>
<!-- Chat Template -->
  </div>
  <div class="ui container">
    <div class="ui stackable grid">
        <div class="ui icon buttons">
          <button id="publish" class="large ui inverted green button">Broadcast&nbsp; &nbsp; <i class="camera icon"></i></button>
        </div>
        <div class="ui icon buttons">
        <button class="large ui teal secondary button">Media Settings&nbsp; &nbsp; <i class="cogs icon"></i></button> 
        </div>
      </div>
                  

              
              <h3 class="ui center aligned header"></h3>
              <div class="ui small jiggle images">
              <div id="remote-videos" class="five column doubling ui stackable grid">
<div class="bootstrap">
<div class="container">
	<div class="row">
		<div class="col-md-12">
			<div class="page-header">
			</div>
			<div class="container" id="details">
				<div class="row">
					<div class="col-md-12">
					</div>
				</div>
			</div>
      
			<div class="container" id="videojoin">
				<div class="row">
					<span class="label label-info" id="you"></span>
					<div class="col-md-12" id="controls">
						<div class="input-group margin-bottom-md" id="registernow">
							<span class="input-group-addon">@</span>
							<input autocomplete="off" class="form-control" autocomplete="off" type="text" placeholder="Choose a display name" id="username" onkeypress="return checkEnter(this, event);"></input>
							<span class="input-group-btn">
							<button class="btn btn-success" autocomplete="off" id="register">Join the room</button>
              <div class="ui button" id="start"></div>
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="container hide" id="videos">
				<div class="row">
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="ui blue label hide" id="publisher"></span>
									<div class="btn-group btn-group-xs pull-right">
										<div class="btn-group btn-group-xs">
											<button id="bitrateset" autocomplete="off" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
												Bandwidth<span class="caret"></span>
											</button>
											<ul id="bitrate" class="dropdown-menu" role="menu">
												<li><a href="#" id="0">No limit</a></li>
												<li><a href="#" id="128">Cap to 128kbit</a></li>
												<li><a href="#" id="256">Cap to 256kbit</a></li>
												<li><a href="#" id="512">Cap to 512kbit</a></li>
												<li><a href="#" id="1024">Cap to 1mbit</a></li>
												<li><a href="#" id="1500">Cap to 1.5mbit</a></li>
												<li><a href="#" id="2000">Cap to 2mbit</a></li>
											</ul>
										</div>
									</div>
								</h3>
							</div>
							<div class="ui segment" id="videolocal"></div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="label label-info" id="remote1"></span></h3>
							</div>
							<div class="panel-body relative" id="videoremote1"></div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="label label-info" id="remote2"></span></h3>
							</div>
							<div class="panel-body relative" id="videoremote2"></div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="label label-info" id="remote3"></span></h3>
							</div>
							<div class="panel-body relative" id="videoremote3"></div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="label label-info" id="remote4"></span></h3>
							</div>
							<div class="panel-body relative" id="videoremote4"></div>
						</div>
					</div>
					<div class="col-md-4">
						<div class="panel panel-default">
							<div class="panel-heading">
								<h3 class="panel-title"><span class="label label-info" id="remote5"></span></h3>
							</div>
							<div class="panel-body relative" id="videoremote5"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
	<hr>
	<div class="footer">
	</div>
</div>


            <div class="youtubewrapper">
              <div class="ui top attached icon buttons" id="youtube-buttons">
                <button class="ui youtube button">
                <i class="youtube icon"></i>
                YouTube
              </button>

                <button class="ui button">
                  <i class="pause icon"></i>
                  Pause
                </button>

                <button class="ui button">
                  <i class="play icon"></i>
                  Play
                </button>

                <button class="ui button">
                  <i class="shuffle icon"></i>
                  Shuffle
                </button>
            </div>
          </div>
        </div>

</div>
            <!-- Local Camera -->
          
        

          <!-- Chat Room Messages -->
  <!-- TEMPLATES -->
  <!-- Remote Video Template -->
  

  
  
  <div class="ui right internal rail"style="margin:0 auto;margin-right:4.25em;margin-top:7em;margin-bottom:0em;bottom:0;position:fixed;min-width:20vw;max-width:20vw;right:0;top:0;">
        <div id="draggable"style="position:relative;overflow-y:visible; max-height:100%;width:100%">
          <div id="chatbox"class="ui divider"style="position:relative;width:100%;overflow-y:scroll;min-width:21.5vw;">
            <br>
    	<div id="conversation"style="position:relative;width:100%;height:70vh;padding:20px;max-width:100%;max-height:100%;">
    </div></div>
        <div class="ui input focus"style="position:relative;min-height:3.3vh;width:100%;min-width:21.5vw;">
        <input id="data"class="content"style="position:relative;width:100%;height:4.5vh;min-height:100%;max-height:100%" />
      </div><div class="win-size-grip"></div>
    <input class="ui button grey" type="button" id="datasend" value="send">
    </div>
  </div>
</div>
<div id="hell0">
</div>
<div id="list">
  <div id="totalOnline">
    <div id="scrl1">
    </div>
  </div>
</div>
<div id="scrl2">
</div>
<div id="messages">
</div>

<div id="noChat">
</div>

<div id="typing"></div>

<div id="frndName"></div>
<div id="loading"></div>
<div id="initMsg"></div>
<div id="chatForm"></div>
  <!-- Scripts -->
  <script>  var socket = io.connect('anomic.io/');

    // on connection to server, ask for user's name with an anonymous callback
  socket.on('connect', function(){
    // call the server-side function 'adduser' and send one parameter (value of prompt)
    socket.emit('adduser',
    $('.ui.modal')
    .modal({  
      blurring: true,
      closable  : false,
      onDeny    : function(){
        window.alert('Wait not yet!');
        return false;
      },
      onApprove : function() {
        window.close();
      }
    //
    
    }).modal('show'));
  });
//


  // listener, whenever the server emits 'updatechat', this updates the chat
  socket.on('updatechat', function (username, data) {
    $('#conversation').append('<div class="ui container"><h6>' +'<h6>' + '<div class="ui medium basic segment"><span class="ui small white text"><p>'+ '<img id="useravatar" class="ui avatar image" src="/images/avatarsmall.jpg"><tag id="username">' + <%- JSON.stringify(user.name) %> + '' + '</tag>' + '<samp><em>' + <%- JSON.stringify(new Date(Date.now()).toLocaleTimeString()) %> + '</em></samp>' + '</p></span><span class="ui tiny white text"><div class="ui teal medium left pointing label"id="message">' + '</span><p><span class="ui medium white text">' + data + '</div></p></span></div></div>' + '</h6></div></div>');
    
    var username = $('#username').val();
    var noChat = 0; //setting 0 if all chats histroy is not loaded. 1 if all chats loaded.
    var msgCount = 0; //counting total number of messages displayed.
    var oldInitDone = 0; //it is 0 when old-chats-init is not executed and 1 if executed.
    var roomId;//variable for setting room.
    var toUser;
  
    //passing data on connection.
    socket.on('connect',function(){
      socket.emit('set-user-data',username);
      // setTimeout(function() { alert(username+" logged In"); }, 500);
  
      socket.on('broadcast',function(data){
      document.getElementById("hell0").innerHTML += '<li>'+ data.description +'</li>';
      // $('#hell0').append($('<li>').append($(data.description).append($('<li>');
      $('#hell0').scrollTop($('#hell0')[0].scrollHeight);
  
  });
  
    });//end of connect event.
  
  
  
    //receiving onlineStack.
    socket.on('onlineStack',function(stack){
      $('#list').empty();
      $('#list').append($('<li>').append($('<button id="ubtn" class="btn btn-danger btn-block btn-lg"></button>').text("Group").css({"font-size":"18px"})));
      var totalOnline = 0;
      for (var user in stack){
        //setting txt1. shows users button.
        if(user == username){
          var txt1 = $('<button class="boxF disabled"> </button>').text(user).css({"font-size":"18px"});
        }
        else{
          var txt1 = $('<button id="ubtn" class="btn btn-success  btn-md">').text(user).css({"font-size":"18px"});
        }
        //setting txt2. shows online status.
        if(stack[user] == "Online"){
          var txt2 = $('<span class="badge"></span>').text("*"+stack[user]).css({"float":"right","color":"#009933","font-size":"18px"});
          totalOnline++;
  
        }
        else{
          var txt2 = $('<span class="badge"></span>').text(stack[user]).css({"float":"right","color":"#a6a6a6","font-size":"18px"});
        }
        //listing all users.
        $('#list').append($('<li>').append(txt1,txt2));
        $('#totalOnline').text(totalOnline);
      }//end of for.
      $('#scrl1').scrollTop($('#scrl1').prop("scrollHeight"));
    }); //end of receiving onlineStack event.
  
  
    //on button click function.
    $(document).on("click","#datasend",function(){
  
      //empty messages.
      $('#messages').empty();
      $('#typing').text("");
      msgCount = 0;
      noChat = 0;
      oldInitDone = 0;
  
      //assigning friends name to whom messages will send,(in case of group its value is Group).
      toUser = $(this).text();
  
      //showing and hiding relevant information.
      $('#frndName').text(toUser);
      $('#initMsg').hide();
      $('#chatForm').show(); //showing chat form.
      $('#sendBtn').hide(); //hiding send button to prevent sending of empty messages.
  
      //assigning two names for room. which helps in one-to-one and also group chat.
      if(toUser == "Group"){
        var currentRoom = "Group-Group";
        var reverseRoom = "Group-Group";
      }
      else{
        var currentRoom = username+"-"+toUser;
        var reverseRoom = toUser+"-"+username;
      }
  
      //event to set room and join.
      socket.emit('set-room',{name1:currentRoom,name2:reverseRoom});
  
    }); //end of on button click event.
  
    //event for setting roomId.
    socket.on('set-room',function(room){
      //empty messages.
      $('#messages').empty();
      $('#typing').text("");
      msgCount = 0;
      noChat = 0;
      oldInitDone = 0;
      //assigning room id to roomId variable. which helps in one-to-one and group chat.
      roomId = room;
      console.log("roomId : "+roomId);
      //event to get chat history on button click or as room is set.
      socket.emit('old-chats-init',{room:roomId,username:username,msgCount:msgCount});
  
    }); //end of set-room event.
  
    //on scroll load more old-chats.
    $('#scrl2').scroll(function(){
  
      if($('#scrl2').scrollTop() == 0 && noChat == 0 && oldInitDone == 1){
        $('#loading').show();
        socket.emit('old-chats',{room:roomId,username:username,msgCount:msgCount});
      }
  
    }); // end of scroll event.
  
    //listening old-chats event.
    socket.on('old-chats',function(data){
  
      if(data.room == roomId){
        oldInitDone = 1; //setting value to implies that old-chats first event is done.
        if(data.result.length != 0){
          $('#noChat').hide(); //hiding no more chats message.
          for (var i = 0;i < data.result.length;i++) {
            //styling of chat message.
            var chatDate = moment(data.result[i].createdOn).format("MMMM Do YYYY, hh:mm:ss a");
            var txt1 = $('<span></span>').text(data.result[i].msgFrom+" : ").css({"color":"#006080"});
            var txt2 = $('<span></span>').text(chatDate).css({"float":"right","color":"#a6a6a6","font-size":"16px"});
            var txt3 = $('<p></p>').append(txt1,txt2);
            var txt4 = $('<p></p>').text(data.result[i].msg).css({"color":"#000000"});
            //showing chat in chat box.
            $('#messages').prepend($('<li>').append(txt3,txt4));
            msgCount++;
  
          }//end of for.
          console.log(msgCount);
        }
        else {
          $('#noChat').show(); //displaying no more chats message.
          noChat = 1; //to prevent unnecessary scroll event.
        }
        //hiding loading bar.
        $('#loading').hide();
  
        //setting scrollbar position while first 5 chats loads.
        if(msgCount <= 5){
          $('#scrl2').scrollTop($('#scrl2').prop("scrollHeight"));
        }
      }//end of outer if.
  
    }); // end of listening old-chats event.
  
    // keyup handler.
    $('#data').keyup(function(){
      if($('#data').val()){
        $('#datasend').show(); //showing send button.
        socket.emit('typing');
      }
      else{
        $('#datasend').hide(); //hiding send button to prevent sending empty messages.
      }
    }); //end of keyup handler.
  
    //receiving typing message.
    socket.on('typing',function(msg){
      var setTime;
      //clearing previous setTimeout function.
      clearTimeout(setTime);
      //showing typing message.
      $('#typing').text(msg);
      //showing typing message only for few seconds.
      setTime = setTimeout(function(){
        $('#typing').text("");
      },3500);
    }); //end of typing event.
  
    //sending message.
    $('content').submit(function(){
      socket.emit('chat-msg',{msg:$('#data').val(),msgTo:toUser,date:Date.now()});
      $('#data').val("");
      $('#datasend').hide();
      return false;
    }); //end of sending message.
  
    //receiving messages.
    socket.on('chat-msg',function(data){
      //styling of chat message.
      var chatDate = moment(data.date).format("MMMM Do YYYY, hh:mm:ss a");
      var txt1 = $('<span></span>').text(data.msgFrom+" : ").css({"color":"#006080"});
      var txt2 = $('<span></span>').text(chatDate).css({"float":"right","color":"#a6a6a6","font-size":"16px"});
      var txt3 = $('<p></p>').append(txt1,txt2);
      var txt4 = $('<p></p>').text(data.msg).css({"color":"#000000"});
      //showing chat in chat box.
      $('#messages').append($('<li>').append(txt3,txt4));
        msgCount++;
        console.log(msgCount);
        $('#typing').text("");
        $('#scrl2').scrollTop($('#scrl2').prop("scrollHeight"));
    }); //end of receiving messages.
  
    //on disconnect event.
    //passing data on connection.
    socket.on('disconnect',function(){
  
  
      //showing and hiding relevant information.
      $('#list').empty();
      $('#messages').empty();
      $('#typing').text("");
      $('#frndName').text("Disconnected..");
      $('#loading').hide();
      $('#noChat').hide();
      $('#initMsg').show().text("...Please, Refresh Your Page...");
      $('#chatForm').hide();
      msgCount = 0;
      noChat = 0;
    });//end of connect event.
  
  
  //end of function.

  });
</script>
  <script id="chat-template" type="text/x-handlebars-template">  </script>
  <script src="https://www.webrtc-experiment.com/Canvas-Designer/canvas-designer-widget.js"></script>
  <script id="chat-content-template" type="text/x-handlebars-template"></script>
  <script src="js/transin.js"></script>
  <script src="js/transout.js"></script>
  <script src="semantic/dist/semantic.min.js"></script>
  <script src="scripts/handlebars/dist/handlebars.min.js "></script>
  <script src="scripts/simplewebrtc/out/simplewebrtc-with-adapter.bundle.js"></script>
  <script src="js/usercheck.js"></script>
  <script src="js/app.js"></script>
  <script src="./janus.js"></script>
  <script src="js/scriptForChat.js"></script>
  <script src="./videoroom.js"></script>
  </div>
  </div>
</body>
</html>
